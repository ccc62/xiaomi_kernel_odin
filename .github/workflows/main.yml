name: Xiaomi Odin Kernel CI Build (via build.sh)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      root_choice:
        type: choice
        description: 选择ROOT方案
        options:
          - kernelsu_next   # 对应build.sh选项1
          - kernelsu_stable # 对应build.sh选项2
          - suki_su_ultra   # 对应build.sh选项3
          - mksu_root       # 对应build.sh选项4
        default: kernelsu_next

jobs:
  build_kernel:
    runs-on: ubuntu-22.04  # 与build.sh兼容的Ubuntu版本
    timeout-minutes: 120   # 延长编译超时时间
    env:
      KERNEL_DIR: xiaomi_kernel_odin
      # 传递root选择到环境变量（供build.sh读取）
      BUILD_SH_ROOT_CHOICE: ${{ github.event.inputs.root_choice }}

    steps:
      - name: 克隆仓库（含子模块）
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 确保拉取AnyKernel3等子模块

      - name: 赋予build.sh执行权限
        run: chmod +x ${{ env.KERNEL_DIR }}/build.sh

      - name: 运行build.sh（非交互式模式）
        run: |
          cd ${{ env.KERNEL_DIR }}
          # 导出环境变量（替代build.sh的交互式输入）
          export ROOT_CHOICE=${BUILD_SH_ROOT_CHOICE}
          # 执行脚本（跳过menuconfig，添加-n参数静默模式）
          ./build.sh -n  # 假设添加-n参数表示非交互式（需修改build.sh逻辑）

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: kernel-package
          paths:
            - "../*.zip"    # build.sh默认将ZIP生成到仓库根目录
            - "kernel.log"  # build.sh生成的编译日志
